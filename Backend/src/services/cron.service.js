const cronRepository = require('../repositories/cron.repository');const telegramService = require('./telegram.service');const telegramRepository = require('../repositories/telegram.repository');exports.resetDailyLogins = async () => {    try {        const updatedCount = await cronRepository.resetDailyLoginStatus();        return { success: true, updatedCount };    } catch (error) {        console.error('Error in resetDailyLogins service:', error);        return { success: false, error: error.message };    }};exports.sendReminderToInactiveUsers = async () => {    try {        const inactiveUsers = await cronRepository.getInactiveUsers();        const results = [];        for (const user of inactiveUsers) {            if (user.telegram_id) {                try {                    const reminderMessage = `Hi ${user.username}! ðŸ‘‹ We haven't heard from you today. How are you feeling? Take a moment to log your mood and reflect on your day. Your mental wellbeing matters!`;                    await telegramService.sendTelegramMessage(user.telegram_id, reminderMessage);                    await telegramRepository.createTelegramLog({                        userId: user.user_id,                        messageContent: reminderMessage                    });                    results.push({                        userId: user.user_id,                        username: user.username,                        success: true,                        message: 'Reminder sent'                    });                } catch (error) {                    console.error(`Error sending reminder to user ${user.user_id}:`, error);                    results.push({                        userId: user.user_id,                        username: user.username,                        success: false,                        error: error.message                    });                }            }        }        return {            success: true,            totalUsers: inactiveUsers.length,            results        };    } catch (error) {        console.error('Error in sendReminderToInactiveUsers service:', error);        return { success: false, error: error.message };    }};